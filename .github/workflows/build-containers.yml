---
name: "Build Containers"
on:
  workflow_dispatch:
  push:
    tags:
      - '*'
jobs:
  build-containers-common:
    runs-on: ubuntu-latest
    outputs:
      containerver: ${{ steps.getcontainerver.outputs.containerver }}
    steps:
      - name: Get Container Version
        id: getcontainerver
        run: |
          echo "containerver=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
  build-containers:
    needs: build-containers-common
    strategy:
      matrix:
        include:
          - runnertags: ubuntu-latest
            arch: amd64
    runs-on: ${{ matrix.runnertags }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build and Push Image
        env:
          CONTAINERVER: ${{ needs.build-containers-common.outputs.containerver }}
          NEXT_PUBLIC_VERSION: ${{ github.ref_name }}
        run: |
          docker buildx build --platform linux/${{ matrix.arch }} \
            -f Dockerfile.dev \
            -t ghcr.io/${{ github.repository_owner }}/postiz-app:${{ env.CONTAINERVER }}-${{ matrix.arch }} \
            --build-arg NEXT_PUBLIC_VERSION=${{ env.NEXT_PUBLIC_VERSION }} \
            --provenance=false --sbom=false \
            --output "type=registry,name=ghcr.io/${{ github.repository_owner }}/postiz-app:${{ env.CONTAINERVER }}-${{ matrix.arch }}" .
  build-container-manifest:
    needs: [build-containers, build-containers-common]
    runs-on: ubuntu-latest
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Create Docker Manifest
        env:
          CONTAINERVER: ${{ needs.build-containers-common.outputs.containerver }}
        run: |
          # Verify the architecture images
          echo "Verifying AMD64 image:"
          docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/postiz-app:${{ env.CONTAINERVER }}-amd64
          
          # Create and push the version-specific manifest (single arch, no manifest needed but keeping for consistency)
          docker tag ghcr.io/${{ github.repository_owner }}/postiz-app:${{ env.CONTAINERVER }}-amd64 ghcr.io/${{ github.repository_owner }}/postiz-app:${{ env.CONTAINERVER }}
          docker push ghcr.io/${{ github.repository_owner }}/postiz-app:${{ env.CONTAINERVER }}
          
          # Create latest tag
          docker tag ghcr.io/${{ github.repository_owner }}/postiz-app:${{ env.CONTAINERVER }}-amd64 ghcr.io/${{ github.repository_owner }}/postiz-app:latest
          docker push ghcr.io/${{ github.repository_owner }}/postiz-app:latest
      - name: Verify Images
        run: |
          docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/postiz-app:latest